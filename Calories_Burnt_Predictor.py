# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wcl_GdfAYSz_Uq-XHw8aUxNqwBjmaZ_x
"""

#Importing the dependencies
import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn import metrics
import seaborn as sns

calories = pd.read_csv('/content/calories.csv')

calories.head()

exercise_data = pd.read_csv('/content/exercise.csv')

calories_data = pd.concat([exercise_data, calories['Calories']], axis=1)

calories_data.head()

calories_data.shape

calories_data.info()

calories_data.isnull().sum()

calories_data.describe()

sns.set()

sns.countplot(calories_data['Gender'])

sns.distplot(calories_data['Age'])

sns.distplot(calories_data['Height'])

sns.distplot(calories_data['Weight'])

correlation = calories_data.corr()

plt.figure(figsize=(10,10))
sns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')

calories_data.replace({"Gender":{'male':0,'female':1}}, inplace=True)

calories_data.head()

X = calories_data.drop(columns=['User_ID','Calories'], axis=1)
Y = calories_data['Calories']

print(X)

print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)

X_train

print(X.shape, X_train.shape, X_test.shape)

model = XGBRegressor()

model.fit(X_train, Y_train)

test_data_prediction = model.predict(X_test)

print(test_data_prediction)

mae = metrics.mean_absolute_error(Y_test, test_data_prediction)

print("Mean Absolute Error = ", mae)

tp=model.predict(1,20 ,  166.0,    60.0,      14.0,        94.0,       40.3)

print(X_test)

ip=(1,38,169.0,67.0,3.0,85.0,38.5)
ipas=np.array(ip)
opr=ipas.reshape(1,-1)
tp=model.predict(opr)
print(tp)

X_test

type(X_test)

type(opr)

df = pd.DataFrame(opr, columns = ['Gender', 'Age', 'Height', 'Weight', 'Duration', 'Heart_Rate', 'Body_Temp'])

tp=model.predict(df)
print(tp)

